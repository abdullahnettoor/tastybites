services:
  db:
    image: postgres:15
    restart: always
    container_name: postgres_db
    environment:
      POSTGRES_USER: tastybites
      POSTGRES_PASSWORD: tastybitespass
      POSTGRES_DB: tastybitesdb
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./db/migrations/000_create_tables.sql:/docker-entrypoint-initdb.d/000_create_tables.sql
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U tastybites -d tastybitesdb"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5
  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    container_name: tastybites_api
    environment:
      - TASTYBITES_DB_HOST=db
      - TASTYBITES_DB_PORT=5432
      - TASTYBITES_DB_USERNAME=tastybites
      - TASTYBITES_DB_PASSWORD=tastybitespass
      - TASTYBITES_DB_DATABASE=tastybitesdb
      - TASTYBITES_SERVER_HOST=0.0.0.0
      - TASTYBITES_SERVER_PORT=8080
    ports:
      - "8080:8080"
    depends_on:
      - db
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/ping"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data: